--- name:rh5v2
# Minimum control error (dead zone). If one control error value falls below this minimum, it will be set to zero.
dead_zone:
  data: [0,0,0,         # Head
         0,0,0,         # Body
         0,0,0,0,0,0,0, # Left Arm
         0,0,0,0,0,0,0] # Right Arm
# Feed Forward gain. Size has to be the same as size of field_names.
d_gain:
  data: [1.0,1.0,1.0,         # Head
         1.0,1.0,1.0,         # Body
         1.0,1.0,1.0,1.0,1.0,1.0,1.0, # Left Arm
         1.0,1.0,1.0,1.0,1.0,1.0,1.0] # Right Arm
# Unique name for each variable, e.g. joint names in case of a joint space controller.
field_names: ["HeadPitch", "HeadRoll", "HeadYaw",
              "BodyPitch", "BodyRoll", "BodyYaw",
              "ALShoulder1", "ALShoulder2", "ALShoulder3", "ALElbow", "ALWristRoll", "ALWristPitch", "ALWristYaw",
              "ARShoulder1", "ARShoulder2", "ARShoulder3", "ARElbow", "ARWristRoll", "ARWristPitch", "ARWristYaw"]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [10.0,10.0,10.0,                 # Head
         10.0,10.0,10.0,                 # Body
         10.0,10.0,10.0,10.0,10.0,10.0,10.0, # Left Arm
         10.0,10.0,10.0,10.0,10.0,10.0,10.0] # Right Arm
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [3.0,3.0,3.0,                 # Head
         3.0,3.0,3.0,                 # Body
         3.0,3.0,3.0,3.0,3.0,3.0,3.0, # Left Arm
         3.0,3.0,3.0,3.0,3.0,3.0,3.0] # Right Arm
# Feed forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [0.0,0.0,0.0,                 # Head
         0.0,0.0,0.0,                 # Body
         0.0,0.0,0.0,0.0,0.0,0.0,0.0, # Left Arm
         0.0,0.0,0.0,0.0,0.0,0.0,0.0] # Right Arm

--- name:rh5v2_hybrid
# Minimum control error (dead zone). If one control error value falls below this minimum, it will be set to zero.
dead_zone:
  data: [0,0,0,         # Head
         0,0,0,         # Body
         0,0,0,0,0,0,0, # Left Arm
         0,0,0,0,0,0,0] # Right Arm
# Feed Forward gain. Size has to be the same as size of field_names.
d_gain:
  data: [1.0,1.0,1.0,         # Head
         1.0,1.0,1.0,         # Body
         1.0,1.0,1.0,1.0,1.0,1.0,1.0, # Left Arm
         1.0,1.0,1.0,1.0,1.0,1.0,1.0] # Right Arm
# Unique name for each variable, e.g. joint names in case of a joint space controller.
field_names: ["HeadActL", "HeadActR", "HeadActC",
              "BodyActL", "BodyActR", "BodyYaw",
              "ALShoulder1", "ALShoulder2", "ALShoulder3", "ALElbowAct", "ALWristRoll", "ALWristActL", "ALWristActR",
              "ARShoulder1", "ARShoulder2", "ARShoulder3", "ARElbowAct", "ARWristRoll", "ARWristActL", "ARWristActR"]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [10.0,10.0,10.0,                 # Head
         10.0,10.0,10.0,                 # Body
         10.0,10.0,10.0,10.0,10.0,10.0,10.0, # Left Arm
         10.0,10.0,10.0,10.0,10.0,10.0,10.0] # Right Arm
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [3.0,3.0,3.0,                 # Head
         3.0,3.0,3.0,                 # Body
         3.0,3.0,3.0,3.0,3.0,3.0,3.0, # Left Arm
         3.0,3.0,3.0,3.0,3.0,3.0,3.0] # Right Arm
# Feed forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [0.0,0.0,0.0,                 # Head
         0.0,0.0,0.0,                 # Body
         0.0,0.0,0.0,0.0,0.0,0.0,0.0, # Left Arm
         0.0,0.0,0.0,0.0,0.0,0.0,0.0] # Right Arm
