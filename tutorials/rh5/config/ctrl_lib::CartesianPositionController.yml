--- name:default
# Unique name for each variable, e.g. joint names in case of a joint space controller.
field_names: ["X", "Y", "Z", "rotZ", "rotY", "rotX"]

--- name:single_leg_cart_ctrl
# Type of activation function used. See ctrl_lib/ActivationFunction.hpp for details.
activation_function:
  threshold: 0
  type: :NO_ACTIVATION
# Minimum control error (dead zone). If one control error value falls below this minimum, it will be set to zero.
dead_zone:
  data: [0,0,0,0,0,0]
# Derivative gain. Size has to be the same as size of field_names.
d_gain:
  data: [1,1,1,1,1,1]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [0,0,0,0,0,0]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [10, 10, 10, 10, 10, 10]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [50, 50, 50, 50, 50, 50]

--- name:single_leg_cart_ctrl_tsid
dead_zone:
  data: [0,0,0,0,0,0]
# Derivative gain. Size has to be the same as size of field_names.
d_gain:
  data: [50, 50, 50, 50, 50, 50]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [1,1,1,1,1,1]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [100, 100, 100, 100, 100, 100]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [50, 50, 50, 50, 50, 50]

--- name:legs_com_ctrl
dead_zone:
  data: [0,0,0,0,0,0]
# Feed Forward gain. Size has to be the same as size of field_names.
d_gain:
    data: [1,1,1,0,0,0]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
    data: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
    data: [2,2,2,0,0,0]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
    data: [0,0,0,0,0,0]

--- name:com_ctrl
dead_zone:
  data: [0,0,0,0,0,0]
# Feed Forward gain. Size has to be the same as size of field_names.
d_gain:
    data: [1,1,1,0,0,0]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
    data: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
    data: [0.2,0.2,1,0,0,0]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
    data: [0,0,0,0,0,0]


--- name:com_ctrl_tsid
# Minimum control error (dead zone). If one control error value falls below this minimum, it will be set to zero.
dead_zone:
  data: [0,0,0,0,0,0]
# Derivative gain. Size has to be the same as size of field_names.
d_gain:
  data: [2,2,2,2,2,2]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [1,1,1,1,1,1]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [100, 100, 100, 100, 100, 100]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [3, 3, 3, 3, 3, 3]

--- name:com_ctrl_tsid_force_control
# Minimum control error (dead zone). If one control error value falls below this minimum, it will be set to zero.
dead_zone:
  data: [0,0,0,0,0,0]
# Derivative gain. Size has to be the same as size of field_names.
d_gain:
  data: [200,200,200,200,200,200]
# Feed Forward gain. Size has to be the same as size of field_names.
ff_gain:
  data: [1,1,1,1,1,1]
# Maximum control output (saturation). If one output value exceeds maximum, all
# other values will be scaled accordingly. Size has to be the same as size of field_names.
max_control_output:
  data: [100, 100, 100, 100, 100, 100]
# Proportional gain. Size has to be the same as size of field_names.
p_gain:
  data: [2000, 2000, 2000, 2000, 2000, 2000]
