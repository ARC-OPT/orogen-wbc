--- name:default
# For debugging purpose: Compute the current status for each constraint, which contains (a) the solver output projected to task space (desired task space motion) and
#              (b) the actual task space motion
compute_constraint_status: true
# Optionally compute the inverse dynamics solution given the solver output
compute_id: false
# This value is added to the diagonal of the Hessian matrix inside the QP to reduce the risk of infeasibility. Default is 1e-8
hessian_regularizer: 1.0e-08
# The joint weights control the contribution of each individual joint to the task solution. Values have to be within (0 <= wq <= 1). A zero means here that the joint is not used at all. Size has to be same as number of robot joints or empty, in which case each joint weight is set to 1.
initial_joint_weights:
  names: []
  elements: []
# Perform numerical integration on the solver output, e.g. if output is acceleration type, integrate twice to get velocity and acceleration
integrate: true
# Maximum number of working set recalculations performed by the solver
n_wsr: 10
# User options for solving the QP. The entries of this struct will be set to sane default values. Check QPOases documentation before changing any of the entries,
#             as that can have a large influence on success of solving the optimization problem
solver_options:
  printLevel: :PL_MEDIUM
  enableRamping: :BT_TRUE
  enableFarBounds: :BT_TRUE
  enableFlippingBounds: :BT_TRUE
  enableRegularisation: :BT_FALSE
  enableFullLITests: :BT_FALSE
  enableNZCTests: :BT_TRUE
  enableDriftCorrection: 1
  enableCholeskyRefactorisation: 0
  enableEqualities: :BT_FALSE
  terminationTolerance: 1.1105e-09
  boundTolerance: 2.221e-10
  boundRelaxation: 10000.0
  epsNum: -2.221e-13
  epsDen: 2.221e-13
  maxPrimalJump: 100000000.0
  maxDualJump: 100000000.0
  initialRamping: 0.5
  finalRamping: 1.0
  initialFarBounds: 1000000.0
  growFarBounds: 1000.0
  initialStatusBounds: :ST_LOWER
  epsFlipping: 2.221e-13
  numRegularisationSteps: 0
  epsRegularisation: 2.221e-13
  numRefinementSteps: 1
  epsIterRef: 2.221e-14
  epsLITests: 2.221e-11
  epsNZCTests: 6.663e-13
  rcondSMin: 1.0e-14
  enableInertiaCorrection: :BT_TRUE
  enableDropInfeasibles: :BT_FALSE
  dropBoundPriority: 1
  dropEqConPriority: 1
  dropIneqConPriority: 1


--- name:configure_success
# Configuration of the robot model. See wbc/core/RobotModelConfig.hpp for details.
robot_model:
  file: <%= "#{ENV['AUTOPROJ_CURRENT_ROOT']}/control/orogen/wbc/models/kuka_iiwa/urdf/kuka_iiwa.urdf" %>
# Configuration of constraints. The WbcTask will dynamically create the following ports for each constraint:
#              Cartesian constraints:
#                  [in] Reference Input (/base/samples/RigidBodyStateSE3):         ref_<constraint_name>
#                  [in] Weights (/base/VectorXd):                      weight_<constraint_name>
#                  [in] Activation function (double):                  activation_<constraint_name>
#                  [out] Constraint pose output (/base/samples/RigidBodyStateSE3): status_<constraint_name>
#                  [out] Constraint status output (/wbc/ConstraintStatus): constraint_<constraint_name>
#              Joint Space constraints:
#                  [in] Reference Input (/base/samples/Joints):            ref_<task_name>
#                  [in] Weights (/base/VectorXd):                          weight_<task_name>
#                  [in] Activation function (double):                      activation_<task_name>
#                  [out] Current joint state output (base/samples/Joints): status_<task_name>
#                  [out] Constraint status output (/wbc/ConstraintStatus): constraint_<constraint_name>
wbc_config:
   - name: "cart_pos_ctrl"
     priority: 0
     type: cart
     root: "kuka_lbr_l_link_0"
     tip:  "kuka_lbr_l_tcp"
     ref_frame: "kuka_lbr_l_link_0"
     activation: 1.0
     weights: [1,1,1,1,1,1]

--- name:configure_success_2
# Configuration of the robot model. See wbc/core/RobotModelConfig.hpp for details.
robot_model:
    file: <%= "#{ENV['AUTOPROJ_CURRENT_ROOT']}/control/orogen/wbc/models/kuka_iiwa/urdf/kuka_iiwa.urdf" %>
# Configuration of constraints. The WbcTask will dynamically create the following ports for each constraint:
#              Cartesian constraints:
#                  [in] Reference Input (/base/samples/RigidBodyStateSE3):         ref_<constraint_name>
#                  [in] Weights (/base/VectorXd):                      weight_<constraint_name>
#                  [in] Activation function (double):                  activation_<constraint_name>
#                  [out] Constraint pose output (/base/samples/RigidBodyStateSE3): status_<constraint_name>
#                  [out] Constraint status output (/wbc/ConstraintStatus): constraint_<constraint_name>
#              Joint Space constraints:
#                  [in] Reference Input (/base/samples/Joints):            ref_<task_name>
#                  [in] Weights (/base/VectorXd):                          weight_<task_name>
#                  [in] Activation function (double):                      activation_<task_name>
#                  [out] Current joint state output (base/samples/Joints): status_<task_name>
#                  [out] Constraint status output (/wbc/ConstraintStatus): constraint_<constraint_name>
wbc_config:
   - name: "cart_pos_ctrl_2"
     priority: 0
     type: cart
     root: "kuka_lbr_l_link_0"
     tip:  "kuka_lbr_l_tcp"
     ref_frame: "kuka_lbr_l_link_0"
     activation: 1.0
     weights: [1,1,1,1,1,1]
